#include <stdio.h>
#include <stdlib.h>
#include "StackOperationsLL.c"

int main() {
	int op, x;
	while(1) {	
		printf("1.Push 2.Pop 3.Display 4.Is Empty 5.Peek 6.Exit\n");
		printf("Enter your option : ");
		scanf("%d", &op);
		switch(op) {
			case 1: 
				printf("Enter element : ");
				scanf("%d", &x);
				push(x);
				break;
			case 2:
				pop();
				break;
			case 3: 
				display();
				break;
			case 4:
				isEmpty();
				break;
			case 5:
				peek();
				break;
			case 6: 
				exit(0);
		}
	}
}






struct stack {
	int data;
	struct stack *next;
};

typedef struct stack *stk;
stk top = NULL;
stk createnode()
{
	stk newnode;
	newnode = (stk)malloc(sizeof(struct stack));
	newnode -> next = NULL;
	return newnode;
}
stk push(int x) {
	stk newnode = createnode(); 
	newnode -> data = x;
	if(top==NULL)
	{
		top = newnode;
		printf("Successfully pushed.\n");
	}
	else 
	{
		newnode -> next = top;
		top = newnode;
		printf("Successfully pushed.\n");
	}
	return top;
}

stk pop() {
	stk lastnode = top;
	if(top==NULL)
	{
		printf("Stack is underflow.\n");
	}
	else
	{
		top = top -> next;
		printf("Popped value = %d\n",lastnode -> data);
		free(lastnode);
	}
	return top;
}

void peek() {
	if(top==NULL)
	{
		printf("Stack is underflow.\n");
	}
	else
	{
		printf("Peek value = %d\n",top -> data);
	}
}

void isEmpty() {
	if(top==NULL)
		printf("Stack is empty.\n");
	else
		printf("Stack is not empty.\n");
}

void display() {
	stk temp = top;
	if(temp == NULL) {
		printf("Stack is empty.\n"); 
	} else {
		printf("Elements of the stack are : ");
		while(temp != NULL) {
			printf("%d ", temp -> data);
			temp = temp -> next;
		}
		printf("\n");
	}
}


